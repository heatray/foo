name: Build online installer

on:
  workflow_dispatch:
    inputs:
      sign:
        description: Sign
        type: boolean
        default: true
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: Build online installer
    runs-on: [ self-hosted, Windows, onlineinstaller ]
    steps:

    - name: Set Variables
      working-directory: desktop-onlineinstaller
      run: |
        if ("tag" -eq "${{ github.ref_type }}") {
          write "PRODUCT_VERSION=$("${{ github.ref }}" -replace "^v")" >> $env:GITHUB_ENV
        }
        else {
          write "PRODUCT_VERSION=0.0.0" >> $env:GITHUB_ENV
        }
        write "BUILD_NUMBER=${{ github.run_number }}" >> $env:GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: ONLYOFFICE/desktop-onlineinstaller
        ref: master
        path: desktop-onlineinstaller

    - name: Checkout build_tools repo
      uses: actions/checkout@v4
      with:
        repository: ONLYOFFICE/build_tools
        ref: master
        path: build_tools

    - name: Checkout core repo
      uses: actions/checkout@v4
      with:
        repository: ONLYOFFICE/core
        ref: master
        path: core

    - name: Checkout desktop-apps repo
      uses: actions/checkout@v4
      with:
        repository: ONLYOFFICE/desktop-apps
        ref: master
        path: desktop-apps

    - name: Build
      working-directory: desktop-onlineinstaller
      run: |
        write "::group::Clean"
        if (Test-Path build) {
          ri -Force -Recurse -Verbose -Path build
        }
        write "::endgroup::"

        write "::group::Config"
        if (-not $env:QT_PATH) {
          $env:QT_PATH = "C:\Qt\5.6.3"
        }
        write @"
        module=`"onlineinstaller`"
        platform=`"win_32_xp`"
        config=`"release`"
        branch=`"master`"
        update=`"false`"
        clean=`"false`"
        qt-dir=`"$env:QT_PATH`"
        qt-dir-xp=`"$env:QT_PATH`"
        "@ | Out-File -Encoding UTF8 config
        gc config
        write @"
        PRODUCT_VERSION = $env:PRODUCT_VERSION
        BUILD_NUMBER    = $env:BUILD_NUMBER
        QT_PATH         = $env:QT_PATH
        "@
        write "::endgroup::"

        write "::group::Build"
        & python make.py
        if (-not $?) { throw }
        gci "build\win_32\xp\online-installer.exe" | % { $_.VersionInfo } | select *
        write "::endgroup::"

    - name: Sign
      if: ${{ inputs.sign }}
      working-directory: desktop-onlineinstaller
      run: |
        $File = "build\win_32\xp\online-installer.exe"
        $CertName = "Ascensio System SIA"
        & signtool sign /v /a /n $CertName /t http://timestamp.digicert.com $File
        if (-not $?) { throw }
        & signtool verify /q /pa /all $File
        if (-not $?) { throw }

    - name: Archive artifact
      uses: actions/upload-artifact@v4
      with:
        name: OnlineInstaller-${{ env.PRODUCT_VERSION }}-${{ env.BUILD_NUMBER }}
        path: desktop-onlineinstaller/build/win_32/xp/online-installer.exe
        if-no-files-found: error

    - name: Create Release
      if: ${{ github.event_name == 'push' }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: ${{ github.event_name == 'push' }}
      id: upload_release_asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # asset_path: ./OnlineInstaller.zip
        # asset_name: OnlineInstaller.zip
        # asset_content_type: application/zip
